@{
    Layout = "../Shared/_LoginLayout";
}

<head>
    <script src="https://www.google.com/recaptcha/enterprise.js?render=6LcjTsYqAAAAAAzqgVSwBjv-QoBhq0TSAyDAPQjT"></script>
</head>

<div id="app" class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="login-card">
        <div class="text-center mb-4">
            <h1 class="fw-bold special-text">Cursive Login</h1>
            <p class="text-muted">Access your writing space</p>
        </div>
        <form class="form-login" id="formLogin">
            <div class="mb-4">
                <label for="email" class="form-label fw-semibold">Email</label>
                <input type="email" id="email" name="email" v-model="formLogin.email"
                       class="form-control shadow-sm"
                       placeholder="example@cursive.dev" required maxlength="256" />
            </div>

            <div class="mb-4">
                <label for="password" class="form-label fw-semibold">Password</label>
                <input type="password" id="password" name="password" v-model="formLogin.password"
                       class="form-control shadow-sm"
                       placeholder="Your secure password" required />
            </div>

            <div class="d-grid gap-2">
                <button type="button" class="btn btn-primary shadow-sm"
                        v-on:click="Login">
                    Sign In
                </button>
            </div>

            <div class="mt-4 text-center">
                <small class="text-muted">
                    Don't have an account?
                    <a href="@Url.Action("Register", "User")" class="text-link">Sign up</a>
                </small>
            </div>
        </form>
    </div>
    <loader ref="loader"></loader>
</div>

@section Scripts {
    <script src="~/js/components/loader.js"></script>
    <script>
        Vue.use(Toasted, {
            position: 'bottom-center',
            duration: 3000
        });

        var vue = new Vue({
            el: '#app',
            data: {
                formLogin: {
                    email: '',
                    password: ''
                },
                returnUrl: ''
            },
            methods: {
                Login: async function () {
                    const self = this;
                    const reCaptchaToken = await grecaptcha.enterprise.execute('6LcjTsYqAAAAAAzqgVSwBjv-QoBhq0TSAyDAPQjT', { action: 'LOGIN' });

                    const data = {
                        Email: this.formLogin.email,
                        Password: this.formLogin.password,
                        ReCaptchaToken: reCaptchaToken
                    };

                    $.ajax({
                        type: 'POST',
                        url: "@Url.Action("Login", "User")",
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(data),
                        beforeSend: () => this.$refs.loader.showLoader(),
                        error: function (error) {
                            console.log(error);
                            if (error.IsReCaptchaError)
                                self.$toasted.error("Fraudulent behavior detected.");
                            else
                                self.$toasted.error("Invalid login credentials.");
                        },
                        success: function (response) {
                            console.log("Login successful!", response);
                            window.location.href = self.returnUrl ? self.returnUrl : "@Url.Action("Index", "Test")";
                        },
                        complete: () => this.$refs.loader.hideLoader()
                    });
                },
                LoadReturnUrl: function () {
                    const queryString = new URLSearchParams(window.location.search);
                    this.returnUrl = queryString.get('ReturnUrl');
                }
            },
            mounted: function () {
                this.LoadReturnUrl();
            }
        })
    </script>
}
